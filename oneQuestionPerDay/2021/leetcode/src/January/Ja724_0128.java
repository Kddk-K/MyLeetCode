package January;

/**
 * 给定一个整数类型的数组 nums，请编写一个能够返回数组 “中心索引” 的方法。
 *
 * 我们是这样定义数组 中心索引 的：数组中心索引的左侧所有元素相加的和等于右侧所有元素相加的和。
 *
 * 如果数组不存在中心索引，那么我们应该返回 -1。如果数组有多个中心索引，那么我们应该返回最靠近左边的那一个。
 *
 * 示例 1：
 *
 * 输入：
 * nums = [1, 7, 3, 6, 5, 6]
 * 输出：3
 * 解释：
 * 索引 3 (nums[3] = 6) 的左侧数之和 (1 + 7 + 3 = 11)，与右侧数之和 (5 + 6 = 11) 相等。
 * 同时, 3 也是第一个符合要求的中心索引。
 * 示例 2：
 *
 * 输入：
 * nums = [1, 2, 3]
 * 输出：-1
 * 解释：
 * 数组中不存在满足此条件的中心索引。
 *  
 *
 * 说明：
 *
 * nums 的长度范围为 [0, 10000]。
 * 任何一个 nums[i] 将会是一个范围在 [-1000, 1000]的整数。
 *

 */

/**
 * 思路：
 *      先求出整个数组的总和，可以得到sum = 左边 + 右边
 *      在移动指针的同时满足左边 = 右边 即可
 *      遍历到的当前结点不算入左边或右边，即
 *      左边 = sum - 右边 - 当前
 */
public class Ja724_0128 {
    public int pivotIndex(int[] nums) {
        //数组之和
        int sum = 0;
        for(int i = 0; i < nums.length; i++){
            sum = sum + nums[i];
        }

        int left = 0;
        for(int i = 0; i < nums.length; i++){
            if(left == sum - left - nums[i]){
                return i;
            }
            left = left + nums[i];
        }
        return -1;
    }
}
